{
  "_args": [
    [
      {
        "raw": "pluralize@https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
        "scope": null,
        "escapedName": "pluralize",
        "name": "pluralize",
        "rawSpec": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
        "spec": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
        "type": "remote"
      },
      "/home/gajendra/tryReact/tryReact"
    ]
  ],
  "_from": "pluralize@https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
  "_id": "pluralize@7.0.0",
  "_inCache": true,
  "_location": "/pluralize",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pluralize@https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
    "scope": null,
    "escapedName": "pluralize",
    "name": "pluralize",
    "rawSpec": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
    "spec": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/eslint"
  ],
  "_resolved": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
  "_shasum": "298b89df8b93b0221dbf421ad2b1b1ea23fc6777",
  "_shrinkwrap": null,
  "_spec": "pluralize@https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
  "_where": "/home/gajendra/tryReact/tryReact",
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "bugs": {
    "url": "https://github.com/blakeembrey/pluralize/issues"
  },
  "dependencies": {},
  "description": "Pluralize and singularize any word",
  "devDependencies": {
    "chai": "^4.0.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "semistandard": "^11.0.0"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "pluralize.js"
  ],
  "homepage": "https://github.com/blakeembrey/pluralize#readme",
  "keywords": [
    "plural",
    "plurals",
    "pluralize",
    "singular",
    "singularize",
    "inflection"
  ],
  "license": "MIT",
  "main": "pluralize.js",
  "name": "pluralize",
  "optionalDependencies": {},
  "readme": "# Pluralize\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n![File Size][filesize-url]\n[![CDNJS][cdnjs-image]][cdnjs-url]\n[![Greenkeeper badge](https://badges.greenkeeper.io/blakeembrey/pluralize.svg)](https://greenkeeper.io/)\n\n> Pluralize and singularize any word.\n\n## Installation\n\n```\nnpm install pluralize --save\nyarn add pluralize\nbower install pluralize --save\n```\n\n### Node\n\n```javascript\nvar pluralize = require('pluralize')\n```\n\n### AMD\n\n```javascript\ndefine(function (require, exports, module) {\n  var pluralize = require('pluralize')\n})\n```\n\n### `<script>` tag\n\n```html\n<script src=\"pluralize.js\"></script>\n```\n\n## Why?\n\nThis module uses a pre-defined list of rules, applied in order, to singularize or pluralize a given word. There are many cases where this is useful, such as any automation based on user input. For applications where the word(s) are known ahead of time, you can use a simple ternary (or function) which would be a much lighter alternative.\n\n## Usage\n\n```javascript\npluralize('test') //=> \"tests\"\npluralize('test', 1) //=> \"test\"\npluralize('test', 5) //=> \"tests\"\npluralize('test', 1, true) //=> \"1 test\"\npluralize('test', 5, true) //=> \"5 tests\"\npluralize('蘋果', 2, true) //=> \"2 蘋果\"\n\npluralize.plural('regex') //=> \"regexes\"\npluralize.addPluralRule(/gex$/i, 'gexii')\npluralize.plural('regex') //=> \"regexii\"\n\npluralize.singular('singles') //=> \"single\"\npluralize.addSingularRule(/singles$/i, 'singular')\npluralize.singular('singles') //=> \"singular\"\n\npluralize.plural('irregular') //=> \"irregulars\"\npluralize.addIrregularRule('irregular', 'regular')\npluralize.plural('irregular') //=> \"regular\"\n\npluralize.plural('paper') //=> \"papers\"\npluralize.addUncountableRule('paper')\npluralize.plural('paper') //=> \"paper\"\n\npluralize.isPlural('test') //=> false\npluralize.isSingular('test') //=> true\n```\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/pluralize.svg?style=flat\n[npm-url]: https://npmjs.org/package/pluralize\n[downloads-image]: https://img.shields.io/npm/dm/pluralize.svg?style=flat\n[downloads-url]: https://npmjs.org/package/pluralize\n[travis-image]: https://img.shields.io/travis/blakeembrey/pluralize.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/pluralize\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/pluralize.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/pluralize?branch=master\n[filesize-url]: https://img.shields.io/github/size/blakeembrey/pluralize/pluralize.js.svg?style=flat\n[cdnjs-image]: https://img.shields.io/cdnjs/v/pluralize.svg\n[cdnjs-url]: https://cdnjs.com/libraries/pluralize\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/blakeembrey/pluralize.git"
  },
  "scripts": {
    "lint": "semistandard",
    "test": "npm run lint && npm run test-cov",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec --bail",
    "test-spec": "mocha -R spec --bail"
  },
  "version": "7.0.0"
}
