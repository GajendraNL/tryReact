{
  "_args": [
    [
      {
        "raw": "walker@https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
        "scope": null,
        "escapedName": "walker",
        "name": "walker",
        "rawSpec": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
        "spec": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
        "type": "remote"
      },
      "/home/gajendra/tryReact/tryReact"
    ]
  ],
  "_from": "walker@https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
  "_id": "walker@1.0.7",
  "_inCache": true,
  "_location": "/walker",
  "_phantomChildren": {},
  "_requested": {
    "raw": "walker@https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
    "scope": null,
    "escapedName": "walker",
    "name": "walker",
    "rawSpec": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
    "spec": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/sane"
  ],
  "_resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
  "_shasum": "2f7f9b8fd10d677262b18a884e28d19618e028fb",
  "_shrinkwrap": null,
  "_spec": "walker@https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
  "_where": "/home/gajendra/tryReact/tryReact",
  "author": {
    "name": "Naitik Shah",
    "email": "n@daaku.org"
  },
  "bugs": {
    "url": "https://github.com/daaku/nodejs-walker/issues"
  },
  "dependencies": {
    "makeerror": "1.0.x"
  },
  "description": "A simple directory tree walker.",
  "devDependencies": {
    "mocha": "0.12.x"
  },
  "homepage": "https://github.com/daaku/nodejs-walker",
  "keywords": [
    "utils",
    "fs",
    "filesystem"
  ],
  "license": "Apache-2.0",
  "main": "lib/walker",
  "name": "walker",
  "optionalDependencies": {},
  "readme": "walker [![Build Status](https://secure.travis-ci.org/daaku/nodejs-walker.png)](http://travis-ci.org/daaku/nodejs-walker)\n======\n\nA nodejs directory walker. Broadcasts events for various file types as well as\na generic \"entry\" event for all types and provides the ability to prune\ndirectory trees. This shows the entire API; everything is optional:\n\n```javascript\nWalker('/etc/')\n  .filterDir(function(dir, stat) {\n    if (dir === '/etc/pam.d') {\n      console.warn('Skipping /etc/pam.d and children')\n      return false\n    }\n    return true\n  })\n  .on('entry', function(entry, stat) {\n    console.log('Got entry: ' + entry)\n  })\n  .on('dir', function(dir, stat) {\n    console.log('Got directory: ' + dir)\n  })\n  .on('file', function(file, stat) {\n    console.log('Got file: ' + file)\n  })\n  .on('symlink', function(symlink, stat) {\n    console.log('Got symlink: ' + symlink)\n  })\n  .on('blockDevice', function(blockDevice, stat) {\n    console.log('Got blockDevice: ' + blockDevice)\n  })\n  .on('fifo', function(fifo, stat) {\n    console.log('Got fifo: ' + fifo)\n  })\n  .on('socket', function(socket, stat) {\n    console.log('Got socket: ' + socket)\n  })\n  .on('characterDevice', function(characterDevice, stat) {\n    console.log('Got characterDevice: ' + characterDevice)\n  })\n  .on('error', function(er, entry, stat) {\n    console.log('Got error ' + er + ' on entry ' + entry)\n  })\n  .on('end', function() {\n    console.log('All files traversed.')\n  })\n```\n\nYou specify a root directory to walk and optionally specify a function to prune\nsub-directory trees via the `filterDir` function. The Walker exposes a number\nof events, broadcasting various file type events a generic error event and\nfinally the event to signal the end of the process.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/daaku/nodejs-walker.git"
  },
  "scripts": {
    "test": "NODE_PATH=./lib mocha --ui exports"
  },
  "version": "1.0.7"
}
